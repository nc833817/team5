@model team5_centric.Models.userData

@{
    ViewBag.Title = "Create Profile";
}

<h2>Create Profile</h2>


@using (Html.BeginForm("Create", "userDatas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.lastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.officeLocation, "Office Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.officeLocation, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.officeLocation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.position, "Position", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.startDate, "Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.avatar, "Profile Picture", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 image-upload custom-upload">
            <div class="imgContain">
                <img id="profPic" class="cover" src="~/Content/Avatars/blank-avatar.png" />
            </div>

            <input id="UploadedImage" type="file" name="UploadedImage" class="customUploadField" onchange="return ValidateFileUpload()" />

            <SCRIPT type="text/javascript">

                function ValidateFileUpload() {
                    var fuData = document.getElementById('UploadedImage');
                    var FileUploadPath = fuData.value;
                    var file = document.getElementById("UploadedImage").files[0];
                    //To check if user upload any file

                    var Extension = FileUploadPath.substring(
                        FileUploadPath.lastIndexOf('.') + 1).toLowerCase();
                    if (Extension == "gif" || Extension == "png" || Extension == "bmp"
                        || Extension == "jpeg" || Extension == "jpg" && file.size < 2500000) {

                        if (fuData.files && fuData.files[0]) {
                            var reader = new FileReader();

                            reader.onload = function (e) {
                                $('#profPic').attr('src', e.target.result);
                            }

                            reader.readAsDataURL(fuData.files[0]);
                            $('.enableOnInput').prop('disabled', false);
                            $("#imgError").text("");
                        }


                    }

                    else {

                        alert("Image must be less than 2mb and a file type of GIF, PNG, JPG, JPEG and BMP.");
                        $('.enableOnInput').prop('disabled', true);
                        $("#imgError").text("Please upload a valid image file to save. Image must be less than 2mb and a file type of GIF, PNG, JPG, JPEG and BMP.");

                    }
                }

            </SCRIPT>
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default enableOnInput" />
            <div id="imgError"></div>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
